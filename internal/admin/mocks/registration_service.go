// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/devpies/saas-core/internal/admin/model"
)

// RegistrationService is an autogenerated mock type for the registrationService type
type RegistrationService struct {
	mock.Mock
}

// RegisterTenant provides a mock function with given fields: ctx, tenant
func (_m *RegistrationService) RegisterTenant(ctx context.Context, tenant model.NewTenant) error {
	ret := _m.Called(ctx, tenant)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.NewTenant) error); ok {
		r0 = rf(ctx, tenant)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewRegistrationServiceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegistrationService creates a new instance of RegistrationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegistrationService(t NewRegistrationServiceT) *RegistrationService {
	mock := &RegistrationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
