{{template "base" .}}

{{define "title"}}

{{end}}

{{define "content"}}
    <div class="col-md-4 offset-md-4">
        <div class="alert alert-info text-left" id="messages">
            <p><strong>Password requirements</strong></p>
            <p>Have a minimum password length of <strong>8</strong> characters long and at least <strong>1</strong></p>
            <ul>
                <li>Number</li>
                <li>Special character</li>
                <li>Uppercase letter</li>
                <li>and Lowercase letter</li>
            </ul>
        </div>
    </div>


    <form id="new-user-password-form" name="new-user-password-form" action="" method="post"
          class="d-block needs-validation new-user-password-form col-md-4 offset-md-4" autocomplete="off" novalidate>

        <h3 class="mt-2 text-center mb-3">Choose a new Password</h3>
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" minlength="8" required>
        </div>

        <div class="mb-3">
            <label for="confirm-password" class="form-label">Confirm Password</label>
            <input type="password" class="form-control" id="confirm-password" name="confirm-password" minlength="8" required>
        </div>

        <input type="hidden" id="email" name="email">
        <input type="hidden" id="session" name="session">

        <a href="javascript:void(0);" id="pay-button" class="btn btn-primary" onclick="val()">Submit</a>
    </form>
{{end}}

{{define "js"}}
    <script>
        let messages = document.getElementById("messages");

        function showError(msg) {
            messages.classList.add("alert-danger");
            messages.classList.remove("alert-success");
            messages.classList.remove("d-none");
            messages.innerText = msg;
        }
        function hideError() {
            messages.classList.remove("alert-danger");
            messages.classList.add("d-none");
            messages.innerText = "";
        }
        function val() {
            let payload = {}, options = {};
            let form = document.getElementById("new-user-password-form");

            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");

           let password = document.getElementById("password").value;
           let password2 = document.getElementById("confirm-password").value;

            // Compare passwords.
            if (password !== password2) {
                showError("passwords do not match")
                return
            }

           let data = JSON.parse(localStorage.getItem("obp"))

            payload.email = data.email
            payload.session = data.session
            payload.password = password

            options = {
                method: "post",
                headers: {
                    "Accept": "application/json",
                    "Content-Type": 'application/json',
                },
                body: JSON.stringify(payload),
            };

            fetch("/secure-new-password", options)
                .then(res => res.json())
                .then(res => {
                    if (res.error) {
                        showError(res.error)
                        return
                    }
                    hideError()
                    localStorage.removeItem("obp")
                    localStorage.setItem("id_token", res.idToken)
                    location.href = "/admin"
                });
        }
    </script>
{{end}}