{{template "base" .}}

{{define "title"}}

{{end}}

{{define "content"}}
    <div class="alert alert-danger text-center d-none" id="messages"></div>

    <form id="login-form" name="login-form" action="" method="post"
          class="d-block needs-validation login-form col-md-4 offset-md-4" autocomplete="off" novalidate>

        <h3 class="mt-2 text-center mb-3">Login</h3>
        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" required autocomplete="email-new">
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" required autocomplete="password-new">
        </div>

        <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Log In</a>
    </form>
{{end}}

{{define "js"}}
    <script>

        if(!parseInt("{{.IsAuthenticated}}", 10)) {
            localStorage.removeItem("id_token")
        }

        let messages = document.getElementById("messages");

        function showError(msg) {
            messages.classList.add("alert-danger");
            messages.classList.remove("alert-success");
            messages.classList.remove("d-none");
            messages.innerText = msg;
        }
        function hideError() {
            messages.classList.remove("alert-danger");
            messages.classList.add("d-none");
            messages.innerText = "";
        }
        function val() {
            let payload = {}, options = {};
            let form = document.getElementById("login-form");

            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");

            payload.email = document.getElementById("email").value;
            payload.password = document.getElementById("password").value;

            options = {
                method: "post",
                headers: {
                    "Accept": "application/json",
                    "Content-Type": 'application/json',
                },
                body: JSON.stringify(payload),
            };

            fetch("/authenticate", options)
                .then(res => res.json())
                .then(res => {
                    if (res.error) {
                        showError(res.error)
                        return
                    }
                    hideError()
                    console.log(res)
                    if(res.challengeName === "NEW_PASSWORD_REQUIRED") {
                        let params = { session: res.session, email: payload.email }
                        localStorage.setItem("obp", JSON.stringify(params))
                        location.href = "/setup/new-password"
                        return
                    }
                    if(res.idToken) {
                        localStorage.setItem("id_token", res.idToken)
                        location.href = "/admin"
                    }
                });
        }
    </script>
{{end}}